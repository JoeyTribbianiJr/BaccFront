<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <appSettings></appSettings>
  <log4net debug="false">
    <!--按日期分割日志文件 一天一个-->
    <appender name="LogFileAppenderByDate" type="log4net.Appender.RollingFileAppender">
      <!--是否续写-->
      <param name="AppendToFile" value="true" />
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="StaticLogFileName" value="false" />
      <!--保存路径-->
      <param name="File" value="./Logs/BaccSocket" />
      <param name="DatePattern" value="yyyy-MM-dd" />
      <param name="RollingStyle" value="Date" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="时间:%d %n级别:%level %n类名:%c%n文件:%F 第%L行%n内容:%m%n-----------------------------------------------------------%n%n" />
      </layout>
    </appender>
    <!--按日志容量分割日志文件 10KB一个-->
    <appender name="LogFileAppenderBySize" type="log4net.Appender.RollingFileAppender">
      <!--是否续写-->
      <param name="AppendToFile" value="true" />
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <param name="StaticLogFileName" value="true" />
      <!--按照文件的大小进行变换日志文件-->
      <param name="RollingStyle" value="Size" />
      <param name="File" value="log.txt" />
      <!--单个文件最大数量 好像只有在 按Size分割时有效-->
      <param name="MaximumFileSize" value="200KB" />
      <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效-->
      <param name="MaxSizeRollBackups" value="2" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="时间:%d %n级别:%level %n类名:%c%n文件:%F 第%L行%n内容:%m%n-----------------------------------------------------------%n%n" />
      </layout>
    </appender>
    <!--记录日志到数据库-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <!--缓冲大小-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="Data Source=.\SQLEXPRESS;Initial Catalog=CVDS;User ID=sa;Password=sasa" />
      <commandText value="INSERT INTO Log([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    <root>
      <level value="ALL" />
      <!--启用按日期分割-->
      <appender-ref ref="LogFileAppenderByDate" />
      <!--启用按容量分割-->
      <!--<appender-ref ref="LogFileAppenderBySize" />-->
      <!--启用保存日志到数据库-->
      <!--<appender-ref ref="AdoNetAppender" />-->
    </root>
  </log4net>
  <!-- 注意 configSections必须位于configuration节点下的第一个子节点。
startup可以放在后面。
<startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
-->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SQLite" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
      <provider invariantName="System.Data.SQLite.EF6" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
    </providers>
  </entityFramework>
  <connectionStrings>
    
  <add name="SqliteBacc" connectionString="data source=BaccFront.db" providerName="System.Data.SQLite.EF6" />
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SQLite.EF6" />
      <add name="SQLite Data Provider (Entity Framework 6)" invariant="System.Data.SQLite.EF6" description=".NET Framework Data Provider for SQLite (Entity Framework 6)" type="System.Data.SQLite.EF6.SQLiteProviderFactory, System.Data.SQLite.EF6" />
    <remove invariant="System.Data.SQLite" />
      <add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".NET Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" /></DbProviderFactories>
  </system.data>
</configuration>